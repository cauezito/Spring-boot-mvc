package br.com.cauezito.curso.boot.dao;

import java.time.LocalDate;
import java.util.List;

import javax.persistence.TypedQuery;

import org.springframework.stereotype.Repository;

import br.com.cauezito.curso.boot.domain.Funcionario;

@Repository
public class FuncionarioDaoImpl extends AbstractDao<Funcionario, Long> implements FuncionarioDao {

	/*@Override
	public List<Funcionario> findByNome(String nome) {
		//consulta JPQL
		TypedQuery<Funcionario> query = getEntityManager().createQuery("select f from Funcionario f where f.nome like :nome", Funcionario.class);
		//inclusão do parâmetro
		query.setParameter("nome", nome);		
		return query.getResultList();
	}*/
	
	public List<Funcionario> findByNome(String nome){
		return createQuery("select f from Funcionario f where f.nome like concat ('%', ?1, '%') " , nome);
	}

	@Override
	public List<Funcionario> findByCargoId(Long id) {
		return createQuery("select f from Funcionario f where f.cargo.id = ?1", id);
	}

	@Override
	public List<Funcionario> findByDataEntradaDataSaida(LocalDate entrada, LocalDate saida) {
		String jpql = new StringBuilder("select f from Funcionario f ")
				.append("where f.dataEntrada >= ?1 and f.dataSaida <= ?2 ")
				.append("order by f.dataEntrada asc")
				.toString();
	}

	@Override
	public List<Funcionario> findByDataEntrada(LocalDate entrada) {
		
	}

	@Override
	public List<Funcionario> findyByDataSaida(LocalDate saida) {
		
	}

}
